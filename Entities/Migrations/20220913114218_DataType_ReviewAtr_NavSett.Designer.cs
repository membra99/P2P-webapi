// <auto-generated />
using System;
using Entities.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Entities.Migrations
{
    [DbContext(typeof(MainContext))]
    [Migration("20220913114218_DataType_ReviewAtr_NavSett")]
    partial class DataType_ReviewAtr_NavSett
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entities.P2P.MainData.DataType", b =>
                {
                    b.Property<int>("DataTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DataTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("DataTypeId");

                    b.ToTable("DataTypes", "P2P");
                });

            modelBuilder.Entity("Entities.P2P.MainData.Language", b =>
                {
                    b.Property<int>("LanguageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("LanguageId");

                    b.HasIndex("LanguageName");

                    b.ToTable("Languages", "P2P");
                });

            modelBuilder.Entity("Entities.P2P.MainData.ReviewAttribute", b =>
                {
                    b.Property<int>("ReviewAttributeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DataTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("Index")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ReviewAttributeId");

                    b.HasIndex("DataTypeId");

                    b.ToTable("ReviewAttributes", "P2P");
                });

            modelBuilder.Entity("Entities.P2P.MainData.Settings.NavigationSettings", b =>
                {
                    b.Property<int>("NavigationSettingsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Academy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("AcademyRoute")
                        .HasColumnType("int");

                    b.Property<string>("Bonus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BonusRoute")
                        .HasColumnType("int");

                    b.Property<string>("Home")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("HomeRoute")
                        .HasColumnType("int");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("News")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NewsRoute")
                        .HasColumnType("int");

                    b.Property<string>("Reviews")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ReviewsRoute")
                        .HasColumnType("int");

                    b.HasKey("NavigationSettingsId");

                    b.HasIndex("LanguageId");

                    b.ToTable("NavigationSettings", "Settings");
                });

            modelBuilder.Entity("Entities.P2P.MainData.Testimonial", b =>
                {
                    b.Property<int>("TestimonialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FullName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("TagLine")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TestimonialText")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("TestimonialId");

                    b.HasIndex("LanguageId");

                    b.ToTable("Testimonials", "P2P");
                });

            modelBuilder.Entity("Entities.P2P.MainData.ReviewAttribute", b =>
                {
                    b.HasOne("Entities.P2P.MainData.DataType", "DataType")
                        .WithMany("ReviewAttributes")
                        .HasForeignKey("DataTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DataType");
                });

            modelBuilder.Entity("Entities.P2P.MainData.Settings.NavigationSettings", b =>
                {
                    b.HasOne("Entities.P2P.MainData.Language", "Language")
                        .WithMany("NavigationSettings")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Language");
                });

            modelBuilder.Entity("Entities.P2P.MainData.Testimonial", b =>
                {
                    b.HasOne("Entities.P2P.MainData.Language", "Language")
                        .WithMany("Testimonials")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Language");
                });

            modelBuilder.Entity("Entities.P2P.MainData.DataType", b =>
                {
                    b.Navigation("ReviewAttributes");
                });

            modelBuilder.Entity("Entities.P2P.MainData.Language", b =>
                {
                    b.Navigation("NavigationSettings");

                    b.Navigation("Testimonials");
                });
#pragma warning restore 612, 618
        }
    }
}
